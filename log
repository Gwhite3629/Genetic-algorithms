==623== Memcheck, a memory error detector
==623== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==623== Using Valgrind-3.20.0 and LibVEX; rerun with -h for copyright info
==623== Command: ./gen
==623== Parent PID: 293
==623== 
==623== Invalid read of size 4
==623==    at 0x109472: main (main.c:18)
==623==  Address 0x4a49fff is 4,095 bytes inside a block of size 4,096 alloc'd
==623==    at 0x4847110: memalign (vg_replace_malloc.c:1532)
==623==    by 0x10BE95: create_region (memory.c:55)
==623==    by 0x10CF22: create (memory.c:280)
==623==    by 0x1092DF: main (main.c:7)
==623== 
==623== Conditional jump or move depends on uninitialised value(s)
==623==    at 0x48B60A7: __printf_buffer (vfprintf-process-arg.c:58)
==623==    by 0x48B6A01: __vfprintf_internal (vfprintf-internal.c:1459)
==623==    by 0x48AC13E: printf (printf.c:33)
==623==    by 0x109489: main (main.c:18)
==623== 
==623== Use of uninitialised value of size 8
==623==    at 0x48AB3BB: _itoa_word (_itoa.c:177)
==623==    by 0x48B4F1F: __printf_buffer (vfprintf-process-arg.c:155)
==623==    by 0x48B6A01: __vfprintf_internal (vfprintf-internal.c:1459)
==623==    by 0x48AC13E: printf (printf.c:33)
==623==    by 0x109489: main (main.c:18)
==623== 
==623== Conditional jump or move depends on uninitialised value(s)
==623==    at 0x48AB3CC: _itoa_word (_itoa.c:177)
==623==    by 0x48B4F1F: __printf_buffer (vfprintf-process-arg.c:155)
==623==    by 0x48B6A01: __vfprintf_internal (vfprintf-internal.c:1459)
==623==    by 0x48AC13E: printf (printf.c:33)
==623==    by 0x109489: main (main.c:18)
==623== 
==623== Conditional jump or move depends on uninitialised value(s)
==623==    at 0x48B4FC7: __printf_buffer (vfprintf-process-arg.c:186)
==623==    by 0x48B6A01: __vfprintf_internal (vfprintf-internal.c:1459)
==623==    by 0x48AC13E: printf (printf.c:33)
==623==    by 0x109489: main (main.c:18)
==623== 
==623== 
==623== Process terminating with default action of signal 2 (SIGINT)
==623==    at 0x4954BC2: write (write.c:26)
==623==    by 0x48D981C: _IO_file_write@@GLIBC_2.2.5 (fileops.c:1180)
==623==    by 0x48D8BA3: new_do_write (fileops.c:448)
==623==    by 0x48DA858: _IO_do_write@@GLIBC_2.2.5 (fileops.c:425)
==623==    by 0x48D9EBD: _IO_new_file_xsputn (fileops.c:1243)
==623==    by 0x48D9EBD: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1196)
==623==    by 0x48AC998: __printf_buffer_flush_to_file (printf_buffer_to_file.c:59)
==623==    by 0x48ACA53: __printf_buffer_to_file_done (printf_buffer_to_file.c:120)
==623==    by 0x48B6A09: __vfprintf_internal (vfprintf-internal.c:1460)
==623==    by 0x48AC13E: printf (printf.c:33)
==623==    by 0x109489: main (main.c:18)
==623== 
==623== HEAP SUMMARY:
==623==     in use at exit: 13,600 bytes in 7 blocks
==623==   total heap usage: 40 allocs, 33 frees, 30,072 bytes allocated
==623== 
==623== LEAK SUMMARY:
==623==    definitely lost: 0 bytes in 0 blocks
==623==    indirectly lost: 0 bytes in 0 blocks
==623==      possibly lost: 0 bytes in 0 blocks
==623==    still reachable: 13,600 bytes in 7 blocks
==623==         suppressed: 0 bytes in 0 blocks
==623== Rerun with --leak-check=full to see details of leaked memory
==623== 
==623== Use --track-origins=yes to see where uninitialised values come from
==623== For lists of detected and suppressed errors, rerun with: -s
==623== ERROR SUMMARY: 23262 errors from 5 contexts (suppressed: 0 from 0)
